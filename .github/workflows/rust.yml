name: Rust

on:
  push:
    branches: [ master,dev ]
  pull_request:
    branches: [ master,dev ]

env:
  CARGO_TERM_COLOR: always
  CUBISM_CORE: third-party

jobs:
  windows-build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        #release: true #是否使用内置msys2
        #location: C:\ #设置安装路径
        update: true
        install: mingw-w64-x86_64-clang mingw-w64-x86_64-compiler-rt mingw-w64-x86_64-clang-tools-extra mingw-w64-clang-x86_64-cargo-c mingw-w64-x86_64-cargo-c
    - name: Check libclang.dll
      run: |
        cd C:/msys64/mingw64/bin/
        ls
    - name: Check libclang.a
      run: |
        cd C:/msys64/mingw64/lib/
        ls
    #设置目录权限
    - name: setQX
      run: |
        echo 检查权限
        Get-ACL -Path "C:/msys64/mingw64/bin/"
        $right="ReadAndExecute"
    #- name: Set up Clang
    #  uses: egor-tensin/setup-clang@v1
    #  with:
    #    version: latest
    #    platform: x64
    #cygwin: 1
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --all-features
    #- name: Build #设置环境变量并构建
    #  run: |
    #    $env:CUBISM_CORE="third-party"
    #    ls env:
    #    cargo build --verbose
    #- name: Run tests
    #  run: cargo test --verbose
  linux-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Check
      run: |
        echo 进入构建目录
        cd target
        echo 查看
        tree
    #上传全部内容
    - uses: actions/upload-artifact@v2 
      with:
        name: libgodot_cubism.so
        path: target/debug/libgodot_cubism.so
  
